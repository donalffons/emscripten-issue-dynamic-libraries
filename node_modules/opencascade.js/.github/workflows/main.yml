name: opencascade.js - Build Library

on:
  push

jobs:
  build:
    name: Build OpenCascade.js
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Build OpenCascade.js Docker Image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: docker.pkg.github.com
          username: donalffons
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: opencascade.js

      - name: Build OpenCascade.js
        timeout-minutes: 240
        run: |
          docker run -v "$(pwd)":"/opencascade.js" my_awesome_image

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: Build Products
          path: dist

      - name: Publish new beta version to NPM
        if: github.ref == 'refs/heads/beta'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}
          npm version $(node -p -e "require('./package.json').version.split('-')[0]")-beta.$(git log --pretty=format:'%h' -n 1) --force
          npm publish --tag=beta

      - name: Commit Build Artifacts in dist
        run: |
          git add -A
          git diff-index --quiet HEAD || git commit -m "Build OpenCascade.js"

      - name: Push Changes to branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  # test:
  #   name: Test OpenCascade.js
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Build Docker Image
  #       uses: whoan/docker-build-with-cache-action@v5
  #       with:
  #         username: donalffons
  #         password: "${{ secrets.GITHUB_TOKEN }}"
  #         registry: docker.pkg.github.com
  #         image_name: opencascade.js
  #     - name: List Docker Images
  #       run: docker image ls
  #     - name: Run Tests
  #       run: |
  #         docker run --init \
  #           -v "$(pwd)/build/":"/opencascade/build/" \
  #           -v "$(pwd)/dist/":"/opencascade/dist/" \
  #           -v "$(pwd)/emscripten-cache/":"/emscripten/upstream/emscripten/cache/" \
  #           -v "$(pwd)/embind/":"/opencascade/embind/" \
  #           my_awesome_image test
